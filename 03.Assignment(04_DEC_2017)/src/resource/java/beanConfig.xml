<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:property-placeholder location="batch.properties"
		ignore-unresolvable="true" />

	<!-- Bean for Table creation used for logging -->
	<jdbc:initialize-database enabled="true"
		data-source="dataSource" ignore-failures="ALL">
		<jdbc:script
			location="classpath:org/springframework/batch/core/schema-mysql.sql"
			execution="INIT" />
	</jdbc:initialize-database>

	<!-- Read properties from batch.properties file -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${dataSource.driverClassName}"></property>
		<property name="username" value="${dataSource.username}"></property>
		<property name="password" value="${dataSource.password}"></property>
		<property name="url" value="${dataSource.url}"></property>
	</bean>

	<!-- -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
		p:jobRepository-ref="jobRepository" />

	<bean id="jobRegistryBeanPostProcessor"
		class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor"
		p:jobRegistry-ref="jobRegistry" />

	<!-- <bean id="compositeUserRegistrationProcessor" class="org.springframework.batch.item.support.CompositeItemProcessor"> 
		<property name="delegates"> <list> <bean class="com.spring.batch.processors.UserRegistrationPhoneValidator" 
		/> <bean class="com.spring.batch.processors.UserRegistrationUrlValidator" 
		/> </list> </property> </bean> -->

	<batch:job id="insertIntoDbFromCsvJob" job-repository="jobRepository">
		<batch:step id="step1">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="csvFileReader" writer="compositeWriter"
					commit-interval="5" processor="userRegistrationDateProcessor">
					<!-- <batch:streams>
						<batch:stream ref="jdbcItemWriter1" />
						<batch:stream ref="jdbcItemWriter1" /> 
						
						
						<batch:stream ref="fileItemWriter1" />
						<batch:stream ref="fileItemWriter2" />
						
						
					</batch:streams> -->
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="userRegistrationDateProcessor"
		class="com.spring.batch.processors.UserRegistrationDateProcessor" />

	<bean id="csvFileReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		p:resource="registrations.csv">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer"
						p:delimiter=","
						p:names="firstName,lastName,company,address,city,state,zip,country,url,phoneNumber,fax,dob,dod" />
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper"
						p:targetType="com.spring.batch.beans.UserRegistration" />
				</property>
			</bean>
		</property>
	</bean>

	<!-- <bean id="jdbcItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter" 
		p:assertUpdates="true" p:dataSource-ref="dataSource"> <property name="sql"> 
		<value> <![CDATA[ insert into USER_REGISTRATION_NAME( NAME, COMPANY, ADDRESS, 
		CITY, STATE, ZIP, COUNTRY, URL, PHONE_NUMBER, FAX ) values ( :name, :company, 
		:address, :city , :state, :zip, :country, :url, :phoneNumber, :fax ) ]]> 
		</value> </property> <property name="itemSqlParameterSourceProvider"> <bean 
		class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"></bean> 
		</property> </bean> -->

	<!-- <bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter"> 
		<property name="resource" value="file:xml/registrationsXML.xml" /> <property 
		name="rootTagName" value="UserRegistrationName" /> <property name="marshaller"> 
		<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller"> <property name="classesToBeBound"> 
		<list> <value>com.spring.batch.beans.UserRegistrationName</value> </list> 
		</property> </bean> </property> </bean> -->


	<bean id="compositeWriter" class="com.spring.batch.writer.CompositeWriter">
		<property name="delegate1" ref="jdbcItemWriter1" />
		<property name="delegate2" ref="jdbcItemWriter2" /> 
		
		<!-- <property name="delegate1" ref="fileItemWriter1" />
		<property name="delegate2" ref="fileItemWriter2" /> -->
	</bean>

	 <!-- <bean id="fileItemWriter1" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="name" value="fw1" />
		<property name="resource" value="file:build/test-outputs/CustomerReport1.txt" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
		</property>
	</bean> -->
	
	<bean id="jdbcItemWriter1"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter"
		p:assertUpdates="true" p:dataSource-ref="dataSource">
		<property name="sql">
			<value>
				<![CDATA[
				insert into USER_REGISTRATION_VALID_DOB(
				FIRST_NAME, LAST_NAME, COMPANY, ADDRESS,
				CITY, STATE, ZIP, COUNTY,
				URL, PHONE_NUMBER, FAX, DOB, DOD )
				values ( :firstName, :lastName, :company, :address, :city , :state, :zip, :country, :url, :phoneNumber, :fax, :dob, :dod )
				]]>
			</value>
		</property>
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"></bean>
		</property>
	</bean>

	 <!-- <bean id="fileItemWriter2" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="name" value="fw2" />
		<property name="resource" value="file:build/test-outputs/CustomerReport2.txt" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.PassThroughLineAggregator" />
		</property>
	</bean> -->
	
	<bean id="jdbcItemWriter2"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter"
		p:assertUpdates="true" p:dataSource-ref="dataSource">
		<property name="sql">
			<value>
				<![CDATA[
				insert into USER_REGISTRATION_INVALID_DOB(
				FIRST_NAME, LAST_NAME, COMPANY, ADDRESS,
				CITY, STATE, ZIP, COUNTY,
				URL, PHONE_NUMBER, FAX, DOB, DOD )
				values ( :firstName, :lastName, :company, :address, :city , :state, :zip, :country, :url, :phoneNumber, :fax, :dob, :dod )
				]]>
			</value>
		</property>
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"></bean>
		</property>
	</bean>


</beans>
